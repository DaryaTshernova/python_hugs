# Декоратор для проверки прав доступа может быть особенно полезным в веб-приложениях,
# где некоторые действия могут быть ограничены для определенных групп пользователей.
# Базовый пример декоратора, который проверяет,
# имеет ли пользователь право на выполнение функции:

def требуемая_роль(роль: str):
    def decorator(func):
        def wrapper(user, *args, **kwargs):
            if user.get('роль') != роль:
                raise PermissionError(f"Пользователь {user.get('имя_пользователя')} не имеет разрешения {роль} для выполнения этой операции.")
            return func(user, *args, **kwargs)

        return wrapper

    return decorator


@требуемая_роль('admin')
def restricted_function(user):
    print(f"Доступ разрешен для {user.get('имя_пользователя')}.")



Алексей = {'имя_пользователя': 'Алексей', 'роль': 'admin'}
Мария = {'имя_пользователя': 'Мария', 'роль': 'user'}

restricted_function(Алексей)  # Должно работать без ошибок
restricted_function(Мария)  # Должно вызвать ошибку PermissionError
